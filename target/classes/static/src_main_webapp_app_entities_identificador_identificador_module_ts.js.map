{"version":3,"file":"src_main_webapp_app_entities_identificador_identificador_module_ts.js","mappings":"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","sources":["./src/main/webapp/app/entities/identificador/delete/identificador-delete-dialog.component.ts","./src/main/webapp/app/entities/identificador/delete/identificador-delete-dialog.component.html","./src/main/webapp/app/entities/identificador/detail/identificador-detail.component.ts","./src/main/webapp/app/entities/identificador/detail/identificador-detail.component.html","./src/main/webapp/app/entities/identificador/identificador.model.ts","./src/main/webapp/app/entities/identificador/identificador.module.ts","./src/main/webapp/app/entities/identificador/list/identificador.component.ts","./src/main/webapp/app/entities/identificador/list/identificador.component.html","./src/main/webapp/app/entities/identificador/route/identificador-routing-resolve.service.ts","./src/main/webapp/app/entities/identificador/route/identificador-routing.module.ts","./src/main/webapp/app/entities/identificador/service/identificador.service.ts","./src/main/webapp/app/entities/identificador/update/identificador-update.component.ts","./src/main/webapp/app/entities/identificador/update/identificador-update.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { IIdentificador } from '../identificador.model';\nimport { IdentificadorService } from '../service/identificador.service';\n\n@Component({\n  templateUrl: './identificador-delete-dialog.component.html',\n})\nexport class IdentificadorDeleteDialogComponent {\n  identificador?: IIdentificador;\n\n  constructor(protected identificadorService: IdentificadorService, protected activeModal: NgbActiveModal) {}\n\n  cancel(): void {\n    this.activeModal.dismiss();\n  }\n\n  confirmDelete(id: number): void {\n    this.identificadorService.delete(id).subscribe(() => {\n      this.activeModal.close('deleted');\n    });\n  }\n}\n","<form *ngIf=\"identificador\" name=\"deleteForm\" (ngSubmit)=\"confirmDelete(identificador.id!)\">\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" data-cy=\"identificadorDeleteDialogHeading\" jhiTranslate=\"entity.delete.title\">Confirm delete operation</h4>\n\n    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" (click)=\"cancel()\">&times;</button>\n  </div>\n\n  <div class=\"modal-body\">\n    <jhi-alert-error></jhi-alert-error>\n\n    <p\n      id=\"jhi-delete-identificador-heading\"\n      jhiTranslate=\"indexTestApp.identificador.delete.question\"\n      [translateValues]=\"{ id: identificador.id }\"\n    >\n      Are you sure you want to delete this Identificador?\n    </p>\n  </div>\n\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"cancel()\">\n      <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n    </button>\n\n    <button id=\"jhi-confirm-delete-identificador\" data-cy=\"entityConfirmDeleteButton\" type=\"submit\" class=\"btn btn-danger\">\n      <fa-icon icon=\"times\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.delete\">Delete</span>\n    </button>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { IIdentificador } from '../identificador.model';\n\n@Component({\n  selector: 'jhi-identificador-detail',\n  templateUrl: './identificador-detail.component.html',\n})\nexport class IdentificadorDetailComponent implements OnInit {\n  identificador: IIdentificador | null = null;\n\n  constructor(protected activatedRoute: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.data.subscribe(({ identificador }) => {\n      this.identificador = identificador;\n    });\n  }\n\n  previousState(): void {\n    window.history.back();\n  }\n}\n","<div class=\"row justify-content-center\">\n  <div class=\"col-8\">\n    <div *ngIf=\"identificador\">\n      <h2 data-cy=\"identificadorDetailsHeading\"><span jhiTranslate=\"indexTestApp.identificador.detail.title\">Identificador</span></h2>\n\n      <hr />\n\n      <jhi-alert-error></jhi-alert-error>\n\n      <jhi-alert></jhi-alert>\n\n      <dl class=\"row-md jh-entity-details\">\n        <dt><span jhiTranslate=\"global.field.id\">ID</span></dt>\n        <dd>\n          <span>{{ identificador.id }}</span>\n        </dd>\n        <dt><span jhiTranslate=\"indexTestApp.identificador.nombre\">Nombre</span></dt>\n        <dd>\n          <span>{{ identificador.nombre }}</span>\n        </dd>\n        <dt><span jhiTranslate=\"indexTestApp.identificador.codigo\">Codigo</span></dt>\n        <dd>\n          <span>{{ identificador.codigo }}</span>\n        </dd>\n        <dt><span jhiTranslate=\"indexTestApp.identificador.descripcion\">Descripcion</span></dt>\n        <dd>\n          <span>{{ identificador.descripcion }}</span>\n        </dd>\n        <dt><span jhiTranslate=\"indexTestApp.identificador.clasificador\">Clasificador</span></dt>\n        <dd>\n          <div *ngIf=\"identificador.clasificador\">\n            <a [routerLink]=\"['/clasificador', identificador.clasificador?.id, 'view']\">{{ identificador.clasificador?.id }}</a>\n          </div>\n        </dd>\n        <dt><span jhiTranslate=\"indexTestApp.identificador.hijoI\">Hijo I</span></dt>\n        <dd>\n          <div *ngIf=\"identificador.hijoI\">\n            <a [routerLink]=\"['/identificador', identificador.hijoI?.id, 'view']\">{{ identificador.hijoI?.id }}</a>\n          </div>\n        </dd>\n      </dl>\n\n      <button type=\"submit\" (click)=\"previousState()\" class=\"btn btn-info\" data-cy=\"entityDetailsBackButton\">\n        <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.back\">Back</span>\n      </button>\n\n      <button type=\"button\" [routerLink]=\"['/identificador', identificador.id, 'edit']\" class=\"btn btn-primary\">\n        <fa-icon icon=\"pencil-alt\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.edit\">Edit</span>\n      </button>\n    </div>\n  </div>\n</div>\n","import { IClasificador } from 'app/entities/clasificador/clasificador.model';\n\nexport interface IIdentificador {\n  id?: number;\n  nombre?: string;\n  codigo?: string;\n  descripcion?: string | null;\n  parentIS?: IIdentificador[] | null;\n  clasificador?: IClasificador | null;\n  hijoI?: IIdentificador | null;\n}\n\nexport class Identificador implements IIdentificador {\n  constructor(\n    public id?: number,\n    public nombre?: string,\n    public codigo?: string,\n    public descripcion?: string | null,\n    public parentIS?: IIdentificador[] | null,\n    public clasificador?: IClasificador | null,\n    public hijoI?: IIdentificador | null\n  ) {}\n}\n\nexport function getIdentificadorIdentifier(identificador: IIdentificador): number | undefined {\n  return identificador.id;\n}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { IdentificadorComponent } from './list/identificador.component';\nimport { IdentificadorDetailComponent } from './detail/identificador-detail.component';\nimport { IdentificadorUpdateComponent } from './update/identificador-update.component';\nimport { IdentificadorDeleteDialogComponent } from './delete/identificador-delete-dialog.component';\nimport { IdentificadorRoutingModule } from './route/identificador-routing.module';\n\n@NgModule({\n  imports: [SharedModule, IdentificadorRoutingModule],\n  declarations: [IdentificadorComponent, IdentificadorDetailComponent, IdentificadorUpdateComponent, IdentificadorDeleteDialogComponent],\n  entryComponents: [IdentificadorDeleteDialogComponent],\n})\nexport class IdentificadorModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { IIdentificador } from '../identificador.model';\nimport { IdentificadorService } from '../service/identificador.service';\nimport { IdentificadorDeleteDialogComponent } from '../delete/identificador-delete-dialog.component';\n\n@Component({\n  selector: 'jhi-identificador',\n  templateUrl: './identificador.component.html',\n})\nexport class IdentificadorComponent implements OnInit {\n  identificadors?: IIdentificador[];\n  isLoading = false;\n\n  constructor(protected identificadorService: IdentificadorService, protected modalService: NgbModal) {}\n\n  loadAll(): void {\n    this.isLoading = true;\n\n    this.identificadorService.query().subscribe(\n      (res: HttpResponse<IIdentificador[]>) => {\n        this.isLoading = false;\n        this.identificadors = res.body ?? [];\n      },\n      () => {\n        this.isLoading = false;\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    this.loadAll();\n  }\n\n  trackId(index: number, item: IIdentificador): number {\n    return item.id!;\n  }\n\n  delete(identificador: IIdentificador): void {\n    const modalRef = this.modalService.open(IdentificadorDeleteDialogComponent, { size: 'lg', backdrop: 'static' });\n    modalRef.componentInstance.identificador = identificador;\n    // unsubscribe not needed because closed completes on modal close\n    modalRef.closed.subscribe(reason => {\n      if (reason === 'deleted') {\n        this.loadAll();\n      }\n    });\n  }\n}\n","<div>\n  <h2 id=\"page-heading\" data-cy=\"IdentificadorHeading\">\n    <span jhiTranslate=\"indexTestApp.identificador.home.title\">Identificadors</span>\n\n    <div class=\"d-flex justify-content-end\">\n      <button class=\"btn btn-info mr-2\" (click)=\"loadAll()\" [disabled]=\"isLoading\">\n        <fa-icon icon=\"sync\" [spin]=\"isLoading\"></fa-icon>\n        <span jhiTranslate=\"indexTestApp.identificador.home.refreshListLabel\">Refresh List</span>\n      </button>\n\n      <button\n        id=\"jh-create-entity\"\n        data-cy=\"entityCreateButton\"\n        class=\"btn btn-primary jh-create-entity create-identificador\"\n        [routerLink]=\"['/identificador/new']\"\n      >\n        <fa-icon icon=\"plus\"></fa-icon>\n        <span jhiTranslate=\"indexTestApp.identificador.home.createLabel\"> Create a new Identificador </span>\n      </button>\n    </div>\n  </h2>\n\n  <jhi-alert-error></jhi-alert-error>\n\n  <jhi-alert></jhi-alert>\n\n  <div class=\"alert alert-warning\" id=\"no-result\" *ngIf=\"identificadors?.length === 0\">\n    <span jhiTranslate=\"indexTestApp.identificador.home.notFound\">No identificadors found</span>\n  </div>\n\n  <div class=\"table-responsive\" id=\"entities\" *ngIf=\"identificadors && identificadors.length > 0\">\n    <table class=\"table table-striped\" aria-describedby=\"page-heading\">\n      <thead>\n        <tr>\n          <th scope=\"col\"><span jhiTranslate=\"global.field.id\">ID</span></th>\n          <th scope=\"col\"><span jhiTranslate=\"indexTestApp.identificador.nombre\">Nombre</span></th>\n          <th scope=\"col\"><span jhiTranslate=\"indexTestApp.identificador.codigo\">Codigo</span></th>\n          <th scope=\"col\"><span jhiTranslate=\"indexTestApp.identificador.descripcion\">Descripcion</span></th>\n          <th scope=\"col\"><span jhiTranslate=\"indexTestApp.identificador.clasificador\">Clasificador</span></th>\n          <th scope=\"col\"><span jhiTranslate=\"indexTestApp.identificador.hijoI\">Hijo I</span></th>\n          <th scope=\"col\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let identificador of identificadors; trackBy: trackId\" data-cy=\"entityTable\">\n          <td>\n            <a [routerLink]=\"['/identificador', identificador.id, 'view']\">{{ identificador.id }}</a>\n          </td>\n          <td>{{ identificador.nombre }}</td>\n          <td>{{ identificador.codigo }}</td>\n          <td>{{ identificador.descripcion }}</td>\n          <td>\n            <div *ngIf=\"identificador.clasificador\">\n              <a [routerLink]=\"['/clasificador', identificador.clasificador?.id, 'view']\">{{ identificador.clasificador?.id }}</a>\n            </div>\n          </td>\n          <td>\n            <div *ngIf=\"identificador.hijoI\">\n              <a [routerLink]=\"['/identificador', identificador.hijoI?.id, 'view']\">{{ identificador.hijoI?.id }}</a>\n            </div>\n          </td>\n          <td class=\"text-right\">\n            <div class=\"btn-group\">\n              <button\n                type=\"submit\"\n                [routerLink]=\"['/identificador', identificador.id, 'view']\"\n                class=\"btn btn-info btn-sm\"\n                data-cy=\"entityDetailsButton\"\n              >\n                <fa-icon icon=\"eye\"></fa-icon>\n                <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.view\">View</span>\n              </button>\n\n              <button\n                type=\"submit\"\n                [routerLink]=\"['/identificador', identificador.id, 'edit']\"\n                class=\"btn btn-primary btn-sm\"\n                data-cy=\"entityEditButton\"\n              >\n                <fa-icon icon=\"pencil-alt\"></fa-icon>\n                <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.edit\">Edit</span>\n              </button>\n\n              <button type=\"submit\" (click)=\"delete(identificador)\" class=\"btn btn-danger btn-sm\" data-cy=\"entityDeleteButton\">\n                <fa-icon icon=\"times\"></fa-icon>\n                <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.delete\">Delete</span>\n              </button>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { Observable, of, EMPTY } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\n\nimport { IIdentificador, Identificador } from '../identificador.model';\nimport { IdentificadorService } from '../service/identificador.service';\n\n@Injectable({ providedIn: 'root' })\nexport class IdentificadorRoutingResolveService implements Resolve<IIdentificador> {\n  constructor(protected service: IdentificadorService, protected router: Router) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<IIdentificador> | Observable<never> {\n    const id = route.params['id'];\n    if (id) {\n      return this.service.find(id).pipe(\n        mergeMap((identificador: HttpResponse<Identificador>) => {\n          if (identificador.body) {\n            return of(identificador.body);\n          } else {\n            this.router.navigate(['404']);\n            return EMPTY;\n          }\n        })\n      );\n    }\n    return of(new Identificador());\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { UserRouteAccessService } from 'app/core/auth/user-route-access.service';\nimport { IdentificadorComponent } from '../list/identificador.component';\nimport { IdentificadorDetailComponent } from '../detail/identificador-detail.component';\nimport { IdentificadorUpdateComponent } from '../update/identificador-update.component';\nimport { IdentificadorRoutingResolveService } from './identificador-routing-resolve.service';\n\nconst identificadorRoute: Routes = [\n  {\n    path: '',\n    component: IdentificadorComponent,\n    canActivate: [UserRouteAccessService],\n  },\n  {\n    path: ':id/view',\n    component: IdentificadorDetailComponent,\n    resolve: {\n      identificador: IdentificadorRoutingResolveService,\n    },\n    canActivate: [UserRouteAccessService],\n  },\n  {\n    path: 'new',\n    component: IdentificadorUpdateComponent,\n    resolve: {\n      identificador: IdentificadorRoutingResolveService,\n    },\n    canActivate: [UserRouteAccessService],\n  },\n  {\n    path: ':id/edit',\n    component: IdentificadorUpdateComponent,\n    resolve: {\n      identificador: IdentificadorRoutingResolveService,\n    },\n    canActivate: [UserRouteAccessService],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(identificadorRoute)],\n  exports: [RouterModule],\n})\nexport class IdentificadorRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { isPresent } from 'app/core/util/operators';\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { IIdentificador, getIdentificadorIdentifier } from '../identificador.model';\n\nexport type EntityResponseType = HttpResponse<IIdentificador>;\nexport type EntityArrayResponseType = HttpResponse<IIdentificador[]>;\n\n@Injectable({ providedIn: 'root' })\nexport class IdentificadorService {\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/identificadors');\n\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\n\n  create(identificador: IIdentificador): Observable<EntityResponseType> {\n    return this.http.post<IIdentificador>(this.resourceUrl, identificador, { observe: 'response' });\n  }\n\n  update(identificador: IIdentificador): Observable<EntityResponseType> {\n    return this.http.put<IIdentificador>(`${this.resourceUrl}/${getIdentificadorIdentifier(identificador) as number}`, identificador, {\n      observe: 'response',\n    });\n  }\n\n  partialUpdate(identificador: IIdentificador): Observable<EntityResponseType> {\n    return this.http.patch<IIdentificador>(`${this.resourceUrl}/${getIdentificadorIdentifier(identificador) as number}`, identificador, {\n      observe: 'response',\n    });\n  }\n\n  find(id: number): Observable<EntityResponseType> {\n    return this.http.get<IIdentificador>(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  query(req?: any): Observable<EntityArrayResponseType> {\n    const options = createRequestOption(req);\n    return this.http.get<IIdentificador[]>(this.resourceUrl, { params: options, observe: 'response' });\n  }\n\n  delete(id: number): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  addIdentificadorToCollectionIfMissing(\n    identificadorCollection: IIdentificador[],\n    ...identificadorsToCheck: (IIdentificador | null | undefined)[]\n  ): IIdentificador[] {\n    const identificadors: IIdentificador[] = identificadorsToCheck.filter(isPresent);\n    if (identificadors.length > 0) {\n      const identificadorCollectionIdentifiers = identificadorCollection.map(\n        identificadorItem => getIdentificadorIdentifier(identificadorItem)!\n      );\n      const identificadorsToAdd = identificadors.filter(identificadorItem => {\n        const identificadorIdentifier = getIdentificadorIdentifier(identificadorItem);\n        if (identificadorIdentifier == null || identificadorCollectionIdentifiers.includes(identificadorIdentifier)) {\n          return false;\n        }\n        identificadorCollectionIdentifiers.push(identificadorIdentifier);\n        return true;\n      });\n      return [...identificadorsToAdd, ...identificadorCollection];\n    }\n    return identificadorCollection;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { finalize, map } from 'rxjs/operators';\n\nimport { IIdentificador, Identificador } from '../identificador.model';\nimport { IdentificadorService } from '../service/identificador.service';\nimport { IClasificador } from 'app/entities/clasificador/clasificador.model';\nimport { ClasificadorService } from 'app/entities/clasificador/service/clasificador.service';\n\n@Component({\n  selector: 'jhi-identificador-update',\n  templateUrl: './identificador-update.component.html',\n})\nexport class IdentificadorUpdateComponent implements OnInit {\n  isSaving = false;\n\n  identificadorsSharedCollection: IIdentificador[] = [];\n  clasificadorsSharedCollection: IClasificador[] = [];\n\n  editForm = this.fb.group({\n    id: [],\n    nombre: [null, [Validators.required]],\n    codigo: [null, [Validators.required]],\n    descripcion: [],\n    clasificador: [],\n    hijoI: [],\n  });\n\n  constructor(\n    protected identificadorService: IdentificadorService,\n    protected clasificadorService: ClasificadorService,\n    protected activatedRoute: ActivatedRoute,\n    protected fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.data.subscribe(({ identificador }) => {\n      this.updateForm(identificador);\n\n      this.loadRelationshipsOptions();\n    });\n  }\n\n  previousState(): void {\n    window.history.back();\n  }\n\n  save(): void {\n    this.isSaving = true;\n    const identificador = this.createFromForm();\n    if (identificador.id !== undefined) {\n      this.subscribeToSaveResponse(this.identificadorService.update(identificador));\n    } else {\n      this.subscribeToSaveResponse(this.identificadorService.create(identificador));\n    }\n  }\n\n  trackIdentificadorById(index: number, item: IIdentificador): number {\n    return item.id!;\n  }\n\n  trackClasificadorById(index: number, item: IClasificador): number {\n    return item.id!;\n  }\n\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<IIdentificador>>): void {\n    result.pipe(finalize(() => this.onSaveFinalize())).subscribe(\n      () => this.onSaveSuccess(),\n      () => this.onSaveError()\n    );\n  }\n\n  protected onSaveSuccess(): void {\n    this.previousState();\n  }\n\n  protected onSaveError(): void {\n    // Api for inheritance.\n  }\n\n  protected onSaveFinalize(): void {\n    this.isSaving = false;\n  }\n\n  protected updateForm(identificador: IIdentificador): void {\n    this.editForm.patchValue({\n      id: identificador.id,\n      nombre: identificador.nombre,\n      codigo: identificador.codigo,\n      descripcion: identificador.descripcion,\n      clasificador: identificador.clasificador,\n      hijoI: identificador.hijoI,\n    });\n\n    this.identificadorsSharedCollection = this.identificadorService.addIdentificadorToCollectionIfMissing(\n      this.identificadorsSharedCollection,\n      identificador.hijoI\n    );\n    this.clasificadorsSharedCollection = this.clasificadorService.addClasificadorToCollectionIfMissing(\n      this.clasificadorsSharedCollection,\n      identificador.clasificador\n    );\n  }\n\n  protected loadRelationshipsOptions(): void {\n    this.identificadorService\n      .query()\n      .pipe(map((res: HttpResponse<IIdentificador[]>) => res.body ?? []))\n      .pipe(\n        map((identificadors: IIdentificador[]) =>\n          this.identificadorService.addIdentificadorToCollectionIfMissing(identificadors, this.editForm.get('hijoI')!.value)\n        )\n      )\n      .subscribe((identificadors: IIdentificador[]) => (this.identificadorsSharedCollection = identificadors));\n\n    this.clasificadorService\n      .query()\n      .pipe(map((res: HttpResponse<IClasificador[]>) => res.body ?? []))\n      .pipe(\n        map((clasificadors: IClasificador[]) =>\n          this.clasificadorService.addClasificadorToCollectionIfMissing(clasificadors, this.editForm.get('clasificador')!.value)\n        )\n      )\n      .subscribe((clasificadors: IClasificador[]) => (this.clasificadorsSharedCollection = clasificadors));\n  }\n\n  protected createFromForm(): IIdentificador {\n    return {\n      ...new Identificador(),\n      id: this.editForm.get(['id'])!.value,\n      nombre: this.editForm.get(['nombre'])!.value,\n      codigo: this.editForm.get(['codigo'])!.value,\n      descripcion: this.editForm.get(['descripcion'])!.value,\n      clasificador: this.editForm.get(['clasificador'])!.value,\n      hijoI: this.editForm.get(['hijoI'])!.value,\n    };\n  }\n}\n","<div class=\"row justify-content-center\">\n  <div class=\"col-8\">\n    <form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" [formGroup]=\"editForm\">\n      <h2\n        id=\"jhi-identificador-heading\"\n        data-cy=\"IdentificadorCreateUpdateHeading\"\n        jhiTranslate=\"indexTestApp.identificador.home.createOrEditLabel\"\n      >\n        Create or edit a Identificador\n      </h2>\n\n      <div>\n        <jhi-alert-error></jhi-alert-error>\n\n        <div class=\"form-group\" [hidden]=\"editForm.get('id')!.value == null\">\n          <label class=\"form-control-label\" jhiTranslate=\"global.field.id\" for=\"field_id\">ID</label>\n          <input type=\"number\" class=\"form-control\" name=\"id\" id=\"field_id\" data-cy=\"id\" formControlName=\"id\" [readonly]=\"true\" />\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" jhiTranslate=\"indexTestApp.identificador.nombre\" for=\"field_nombre\">Nombre</label>\n          <input type=\"text\" class=\"form-control\" name=\"nombre\" id=\"field_nombre\" data-cy=\"nombre\" formControlName=\"nombre\" />\n          <div *ngIf=\"editForm.get('nombre')!.invalid && (editForm.get('nombre')!.dirty || editForm.get('nombre')!.touched)\">\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('nombre')?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n              This field is required.\n            </small>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" jhiTranslate=\"indexTestApp.identificador.codigo\" for=\"field_codigo\">Codigo</label>\n          <input type=\"text\" class=\"form-control\" name=\"codigo\" id=\"field_codigo\" data-cy=\"codigo\" formControlName=\"codigo\" />\n          <div *ngIf=\"editForm.get('codigo')!.invalid && (editForm.get('codigo')!.dirty || editForm.get('codigo')!.touched)\">\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('codigo')?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n              This field is required.\n            </small>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" jhiTranslate=\"indexTestApp.identificador.descripcion\" for=\"field_descripcion\"\n            >Descripcion</label\n          >\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            name=\"descripcion\"\n            id=\"field_descripcion\"\n            data-cy=\"descripcion\"\n            formControlName=\"descripcion\"\n          />\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" jhiTranslate=\"indexTestApp.identificador.clasificador\" for=\"field_clasificador\"\n            >Clasificador</label\n          >\n          <select class=\"form-control\" id=\"field_clasificador\" data-cy=\"clasificador\" name=\"clasificador\" formControlName=\"clasificador\">\n            <option [ngValue]=\"null\"></option>\n            <option\n              [ngValue]=\"\n                clasificadorOption.id === editForm.get('clasificador')!.value?.id ? editForm.get('clasificador')!.value : clasificadorOption\n              \"\n              *ngFor=\"let clasificadorOption of clasificadorsSharedCollection; trackBy: trackClasificadorById\"\n            >\n              {{ clasificadorOption.id }}\n            </option>\n          </select>\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" jhiTranslate=\"indexTestApp.identificador.hijoI\" for=\"field_hijoI\">Hijo I</label>\n          <select class=\"form-control\" id=\"field_hijoI\" data-cy=\"hijoI\" name=\"hijoI\" formControlName=\"hijoI\">\n            <option [ngValue]=\"null\"></option>\n            <option\n              [ngValue]=\"identificadorOption.id === editForm.get('hijoI')!.value?.id ? editForm.get('hijoI')!.value : identificadorOption\"\n              *ngFor=\"let identificadorOption of identificadorsSharedCollection; trackBy: trackIdentificadorById\"\n            >\n              {{ identificadorOption.id }}\n            </option>\n          </select>\n        </div>\n      </div>\n\n      <div>\n        <button type=\"button\" id=\"cancel-save\" data-cy=\"entityCreateCancelButton\" class=\"btn btn-secondary\" (click)=\"previousState()\">\n          <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n\n        <button\n          type=\"submit\"\n          id=\"save-entity\"\n          data-cy=\"entityCreateSaveButton\"\n          [disabled]=\"editForm.invalid || isSaving\"\n          class=\"btn btn-primary\"\n        >\n          <fa-icon icon=\"save\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.save\">Save</span>\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n"],"names":[],"sourceRoot":"webpack:///"}