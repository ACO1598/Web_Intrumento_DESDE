{"version":3,"file":"common.js","mappings":"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","sources":["./src/main/webapp/app/config/input.constants.ts","./src/main/webapp/app/config/pagination.constants.ts","./src/main/webapp/app/core/request/request-util.ts","./src/main/webapp/app/core/util/operators.ts","./src/main/webapp/app/entities/clasificador/clasificador.model.ts","./src/main/webapp/app/entities/clasificador/service/clasificador.service.ts","./src/main/webapp/app/entities/codigo-desde/codigo-desde.model.ts","./src/main/webapp/app/entities/codigo-desde/service/codigo-desde.service.ts","./src/main/webapp/app/entities/seccion/seccion.model.ts","./src/main/webapp/app/entities/seccion/service/seccion.service.ts"],"sourcesContent":["export const DATE_FORMAT = 'YYYY-MM-DD';\nexport const DATE_TIME_FORMAT = 'YYYY-MM-DDTHH:mm';\n","export const ITEMS_PER_PAGE = 20;\nexport const ASC = 'asc';\nexport const DESC = 'desc';\nexport const SORT = 'sort';\n","import { HttpParams } from '@angular/common/http';\n\nexport const createRequestOption = (req?: any): HttpParams => {\n  let options: HttpParams = new HttpParams();\n\n  if (req) {\n    Object.keys(req).forEach(key => {\n      if (key !== 'sort') {\n        options = options.set(key, req[key]);\n      }\n    });\n\n    if (req.sort) {\n      req.sort.forEach((val: string) => {\n        options = options.append('sort', val);\n      });\n    }\n  }\n\n  return options;\n};\n","/*\n * Function used to workaround https://github.com/microsoft/TypeScript/issues/16069\n * es2019 alternative `const filteredArr = myArr.flatMap((x) => x ? x : []);`\n */\nexport function isPresent<T>(t: T | undefined | null | void): t is T {\n  return t !== undefined && t !== null;\n}\n\nexport const filterNaN = (input: number): number => (isNaN(input) ? 0 : input);\n","import { IIdentificador } from 'app/entities/identificador/identificador.model';\nimport { ISeccion } from 'app/entities/seccion/seccion.model';\n\nexport interface IClasificador {\n  id?: number;\n  nombre?: string;\n  descripcion?: string | null;\n  ejemplos?: string | null;\n  identificadors?: IIdentificador[] | null;\n  parentCS?: IClasificador[] | null;\n  seccion?: ISeccion | null;\n  hijoC?: IClasificador | null;\n}\n\nexport class Clasificador implements IClasificador {\n  constructor(\n    public id?: number,\n    public nombre?: string,\n    public descripcion?: string | null,\n    public ejemplos?: string | null,\n    public identificadors?: IIdentificador[] | null,\n    public parentCS?: IClasificador[] | null,\n    public seccion?: ISeccion | null,\n    public hijoC?: IClasificador | null\n  ) {}\n}\n\nexport function getClasificadorIdentifier(clasificador: IClasificador): number | undefined {\n  return clasificador.id;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { isPresent } from 'app/core/util/operators';\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { IClasificador, getClasificadorIdentifier } from '../clasificador.model';\n\nexport type EntityResponseType = HttpResponse<IClasificador>;\nexport type EntityArrayResponseType = HttpResponse<IClasificador[]>;\n\n@Injectable({ providedIn: 'root' })\nexport class ClasificadorService {\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/clasificadors');\n\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\n\n  create(clasificador: IClasificador): Observable<EntityResponseType> {\n    return this.http.post<IClasificador>(this.resourceUrl, clasificador, { observe: 'response' });\n  }\n\n  update(clasificador: IClasificador): Observable<EntityResponseType> {\n    return this.http.put<IClasificador>(`${this.resourceUrl}/${getClasificadorIdentifier(clasificador) as number}`, clasificador, {\n      observe: 'response',\n    });\n  }\n\n  partialUpdate(clasificador: IClasificador): Observable<EntityResponseType> {\n    return this.http.patch<IClasificador>(`${this.resourceUrl}/${getClasificadorIdentifier(clasificador) as number}`, clasificador, {\n      observe: 'response',\n    });\n  }\n\n  find(id: number): Observable<EntityResponseType> {\n    return this.http.get<IClasificador>(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  query(req?: any): Observable<EntityArrayResponseType> {\n    const options = createRequestOption(req);\n    return this.http.get<IClasificador[]>(this.resourceUrl, { params: options, observe: 'response' });\n  }\n\n  delete(id: number): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  addClasificadorToCollectionIfMissing(\n    clasificadorCollection: IClasificador[],\n    ...clasificadorsToCheck: (IClasificador | null | undefined)[]\n  ): IClasificador[] {\n    const clasificadors: IClasificador[] = clasificadorsToCheck.filter(isPresent);\n    if (clasificadors.length > 0) {\n      const clasificadorCollectionIdentifiers = clasificadorCollection.map(\n        clasificadorItem => getClasificadorIdentifier(clasificadorItem)!\n      );\n      const clasificadorsToAdd = clasificadors.filter(clasificadorItem => {\n        const clasificadorIdentifier = getClasificadorIdentifier(clasificadorItem);\n        if (clasificadorIdentifier == null || clasificadorCollectionIdentifiers.includes(clasificadorIdentifier)) {\n          return false;\n        }\n        clasificadorCollectionIdentifiers.push(clasificadorIdentifier);\n        return true;\n      });\n      return [...clasificadorsToAdd, ...clasificadorCollection];\n    }\n    return clasificadorCollection;\n  }\n}\n","import * as dayjs from 'dayjs';\nimport { ISeccion } from 'app/entities/seccion/seccion.model';\n\nexport interface ICodigoDESDE {\n  id?: number;\n  version?: string;\n  fecha?: dayjs.Dayjs;\n  introduccion?: string | null;\n  terminologiaComun?: string | null;\n  importanciaContexto?: string | null;\n  descripcion?: string | null;\n  poblacionObjetivo?: string | null;\n  referencia?: string | null;\n  seccions?: ISeccion[] | null;\n}\n\nexport class CodigoDESDE implements ICodigoDESDE {\n  constructor(\n    public id?: number,\n    public version?: string,\n    public fecha?: dayjs.Dayjs,\n    public introduccion?: string | null,\n    public terminologiaComun?: string | null,\n    public importanciaContexto?: string | null,\n    public descripcion?: string | null,\n    public poblacionObjetivo?: string | null,\n    public referencia?: string | null,\n    public seccions?: ISeccion[] | null\n  ) {}\n}\n\nexport function getCodigoDESDEIdentifier(codigoDESDE: ICodigoDESDE): number | undefined {\n  return codigoDESDE.id;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as dayjs from 'dayjs';\n\nimport { isPresent } from 'app/core/util/operators';\nimport { DATE_FORMAT } from 'app/config/input.constants';\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { ICodigoDESDE, getCodigoDESDEIdentifier } from '../codigo-desde.model';\n\nexport type EntityResponseType = HttpResponse<ICodigoDESDE>;\nexport type EntityArrayResponseType = HttpResponse<ICodigoDESDE[]>;\n\n@Injectable({ providedIn: 'root' })\nexport class CodigoDESDEService {\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/codigo-desdes');\n\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\n\n  create(codigoDESDE: ICodigoDESDE): Observable<EntityResponseType> {\n    const copy = this.convertDateFromClient(codigoDESDE);\n    return this.http\n      .post<ICodigoDESDE>(this.resourceUrl, copy, { observe: 'response' })\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n  }\n\n  update(codigoDESDE: ICodigoDESDE): Observable<EntityResponseType> {\n    const copy = this.convertDateFromClient(codigoDESDE);\n    return this.http\n      .put<ICodigoDESDE>(`${this.resourceUrl}/${getCodigoDESDEIdentifier(codigoDESDE) as number}`, copy, { observe: 'response' })\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n  }\n\n  partialUpdate(codigoDESDE: ICodigoDESDE): Observable<EntityResponseType> {\n    const copy = this.convertDateFromClient(codigoDESDE);\n    return this.http\n      .patch<ICodigoDESDE>(`${this.resourceUrl}/${getCodigoDESDEIdentifier(codigoDESDE) as number}`, copy, { observe: 'response' })\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n  }\n\n  find(id: number): Observable<EntityResponseType> {\n    return this.http\n      .get<ICodigoDESDE>(`${this.resourceUrl}/${id}`, { observe: 'response' })\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n  }\n\n  query(req?: any): Observable<EntityArrayResponseType> {\n    const options = createRequestOption(req);\n    return this.http\n      .get<ICodigoDESDE[]>(this.resourceUrl, { params: options, observe: 'response' })\n      .pipe(map((res: EntityArrayResponseType) => this.convertDateArrayFromServer(res)));\n  }\n\n  delete(id: number): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  addCodigoDESDEToCollectionIfMissing(\n    codigoDESDECollection: ICodigoDESDE[],\n    ...codigoDESDESToCheck: (ICodigoDESDE | null | undefined)[]\n  ): ICodigoDESDE[] {\n    const codigoDESDES: ICodigoDESDE[] = codigoDESDESToCheck.filter(isPresent);\n    if (codigoDESDES.length > 0) {\n      const codigoDESDECollectionIdentifiers = codigoDESDECollection.map(codigoDESDEItem => getCodigoDESDEIdentifier(codigoDESDEItem)!);\n      const codigoDESDESToAdd = codigoDESDES.filter(codigoDESDEItem => {\n        const codigoDESDEIdentifier = getCodigoDESDEIdentifier(codigoDESDEItem);\n        if (codigoDESDEIdentifier == null || codigoDESDECollectionIdentifiers.includes(codigoDESDEIdentifier)) {\n          return false;\n        }\n        codigoDESDECollectionIdentifiers.push(codigoDESDEIdentifier);\n        return true;\n      });\n      return [...codigoDESDESToAdd, ...codigoDESDECollection];\n    }\n    return codigoDESDECollection;\n  }\n\n  protected convertDateFromClient(codigoDESDE: ICodigoDESDE): ICodigoDESDE {\n    return Object.assign({}, codigoDESDE, {\n      fecha: codigoDESDE.fecha?.isValid() ? codigoDESDE.fecha.format(DATE_FORMAT) : undefined,\n    });\n  }\n\n  protected convertDateFromServer(res: EntityResponseType): EntityResponseType {\n    if (res.body) {\n      res.body.fecha = res.body.fecha ? dayjs(res.body.fecha) : undefined;\n    }\n    return res;\n  }\n\n  protected convertDateArrayFromServer(res: EntityArrayResponseType): EntityArrayResponseType {\n    if (res.body) {\n      res.body.forEach((codigoDESDE: ICodigoDESDE) => {\n        codigoDESDE.fecha = codigoDESDE.fecha ? dayjs(codigoDESDE.fecha) : undefined;\n      });\n    }\n    return res;\n  }\n}\n","import { IClasificador } from 'app/entities/clasificador/clasificador.model';\nimport { ICodigoDESDE } from 'app/entities/codigo-desde/codigo-desde.model';\n\nexport interface ISeccion {\n  id?: number;\n  nombre?: string;\n  descripcion?: string | null;\n  codigo?: string;\n  clasificadors?: IClasificador[] | null;\n  codigoDESDE?: ICodigoDESDE | null;\n}\n\nexport class Seccion implements ISeccion {\n  constructor(\n    public id?: number,\n    public nombre?: string,\n    public descripcion?: string | null,\n    public codigo?: string,\n    public clasificadors?: IClasificador[] | null,\n    public codigoDESDE?: ICodigoDESDE | null\n  ) {}\n}\n\nexport function getSeccionIdentifier(seccion: ISeccion): number | undefined {\n  return seccion.id;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { isPresent } from 'app/core/util/operators';\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { ISeccion, getSeccionIdentifier } from '../seccion.model';\n\nexport type EntityResponseType = HttpResponse<ISeccion>;\nexport type EntityArrayResponseType = HttpResponse<ISeccion[]>;\n\n@Injectable({ providedIn: 'root' })\nexport class SeccionService {\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/seccions');\n\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\n\n  create(seccion: ISeccion): Observable<EntityResponseType> {\n    return this.http.post<ISeccion>(this.resourceUrl, seccion, { observe: 'response' });\n  }\n\n  update(seccion: ISeccion): Observable<EntityResponseType> {\n    return this.http.put<ISeccion>(`${this.resourceUrl}/${getSeccionIdentifier(seccion) as number}`, seccion, { observe: 'response' });\n  }\n\n  partialUpdate(seccion: ISeccion): Observable<EntityResponseType> {\n    return this.http.patch<ISeccion>(`${this.resourceUrl}/${getSeccionIdentifier(seccion) as number}`, seccion, { observe: 'response' });\n  }\n\n  find(id: number): Observable<EntityResponseType> {\n    return this.http.get<ISeccion>(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  query(req?: any): Observable<EntityArrayResponseType> {\n    const options = createRequestOption(req);\n    return this.http.get<ISeccion[]>(this.resourceUrl, { params: options, observe: 'response' });\n  }\n\n  delete(id: number): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  addSeccionToCollectionIfMissing(seccionCollection: ISeccion[], ...seccionsToCheck: (ISeccion | null | undefined)[]): ISeccion[] {\n    const seccions: ISeccion[] = seccionsToCheck.filter(isPresent);\n    if (seccions.length > 0) {\n      const seccionCollectionIdentifiers = seccionCollection.map(seccionItem => getSeccionIdentifier(seccionItem)!);\n      const seccionsToAdd = seccions.filter(seccionItem => {\n        const seccionIdentifier = getSeccionIdentifier(seccionItem);\n        if (seccionIdentifier == null || seccionCollectionIdentifiers.includes(seccionIdentifier)) {\n          return false;\n        }\n        seccionCollectionIdentifiers.push(seccionIdentifier);\n        return true;\n      });\n      return [...seccionsToAdd, ...seccionCollection];\n    }\n    return seccionCollection;\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}